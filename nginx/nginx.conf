user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 4000;
	multi_accept on;
}

http {

	##
	# Basic Settings
	##
	
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 75;
	# Number of requests a client can make over the keep-alive connection.
	keepalive_requests 1000;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
	gzip_disable "msie6";

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	# include /etc/nginx/sites-enabled/*;

	server {
		server_name 'api.criticalcss.ru';
		root /root/api/apigateway/public;
	
		add_header X-Frame-Options "SAMEORIGIN";
		add_header X-Content-Type-Options "nosniff";
	
		index index.php index.js;
	
		charset utf-8;
	
		location / {
			try_files $uri $uri/ /index.php?$query_string;
		}

		location /generator-css/ {
			# rewrite ^/apigateway/(.*)   /$1 break;
			# proxy_pass http://188.225.18.230:3000/; 
			proxy_pass http://854577-cx24002.tmweb.ru:3000/;
			proxy_set_header Host       $proxy_host;
			proxy_set_header Connection close;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $http_host;
			proxy_redirect         off;
		}
	
		location = /favicon.ico { access_log off; log_not_found off; }
		location = /robots.txt  { access_log off; log_not_found off; }
	
		error_page 404 /index.php;
	
		location ~ \.php$ {
			fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
			fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
			include fastcgi_params;
		}
	
		location ~ /\.(?!well-known).* {
			deny all;
		}
		
		listen [::]:443 ssl; # managed by Certbot
		listen 443 ssl; # managed by Certbot
		ssl_certificate /etc/letsencrypt/live/criticalcss.ru/fullchain.pem; # managed by Certbot
		ssl_certificate_key /etc/letsencrypt/live/criticalcss.ru/privkey.pem; # managed by Certbot
		include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

	}

	server {
		root /root/public;
		index index.html;
		server_name 'criticalcss.ru';
		charset utf-8;

		location / {
			# Удаляем index.html из всех уровней url
			rewrite     ^(/.*)/index.html $1 permanent;

			# Удаляем .php
			rewrite     ^(/.*)\.php(\?.*)?$ $1$2 permanent;

			# Удаляем .html
			rewrite     ^(/.*)\.html(\?.*)?$ $1$2 permanent;

			# Удаляем закрывающий слэш
			rewrite     ^/(.*)/$ $1 permanent;

			# Определяем порядок файлов для обработки запроса
			try_files   $uri/index.html $uri.html $uri/ $uri =404;
		}

		location = /favicon.ico {
			log_not_found off;
			access_log off;
		}

		location = /robots.txt {
			allow all;
			log_not_found off;
			access_log off;
		}
		
		listen [::]:443 ssl ipv6only=on; # managed by Certbot
		listen 443 ssl; # managed by Certbot
		ssl_certificate /etc/letsencrypt/live/criticalcss.ru/fullchain.pem; # managed by Certbot
		ssl_certificate_key /etc/letsencrypt/live/criticalcss.ru/privkey.pem; # managed by Certbot
		include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	}

	server {
		if ($host ~* ^www\.(.*)$) {
			return 301 https://$host$request_uri;
		}
	}
	
	server {
		if ($host = criticalcss.ru) {
			return 301 https://$host$request_uri;
		}

		# listen 443;
  		# listen [::]:443;
		server_name 'criticalcss.ru';
    	return 404; # managed by Certbot
	}

	server {
		if ($host = api.criticalcss.ru) {
			return 301 https://$host$request_uri;
		}

		# listen 443;
		# listen [::]:443;
		server_name 'api.criticalcss.ru';
    	return 404; # managed by Certbot
	}
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
